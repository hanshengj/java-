给定一个整数数组，判断是否存在重复元素。

如果存在一值在数组中出现至少两次，函数返回 true 。如果数组中每个元素都不相同，则返回 false 。

示例 1:

输入: [1,2,3,1]
输出: true
class Solution {
    public boolean containsDuplicate(int[] nums) {
       Arrays.sort(nums);
       int len=nums.length;
       for (int i=0;i<len-1;i++){
         if(nums[i]==nums[i+1]){
             return true;
         }
       }
       return false;
    }
}

你的朋友正在使用键盘输入他的名字 name。偶尔，在键入字符 c 时，按键可能会被长按，而字符可能被输入 1 次或多次。

你将会检查键盘输入的字符 typed。如果它对应的可能是你的朋友的名字（其中一些字符可能被长按），那么就返回 True。


示例 1：

输入：name = "alex", typed = "aaleex"
输出：true
解释：'alex' 中的 'a' 和 'e' 被长按。

class Solution {
    public boolean isLongPressedName(String name, String typed) {
        int i = 0, j = 0;
        int len1=name.length();
        int len2=typed.length();

        while (j < len2) {
            if (i < len1 && name.charAt(i) == typed.charAt(j)) {
                i++;
                j++;
            } else if (j > 0 && typed.charAt(j) == typed.charAt(j - 1)) {
                j++;
            } else {
                return false;
            }
        }
        return i == name.length();
    }
}

